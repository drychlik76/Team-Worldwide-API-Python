# coding: utf-8

"""
    Team Worldwide API 2022

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BookShipmentTeamBookShipmentCreate(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'quote_id': 'int',
        'house_bill': 'str',
        'bol_prefix': 'str',
        'insurance_addon': 'bool',
        'third_party_reference_number': 'str',
        'pro_number': 'str',
        'team_book_shipper': 'TeamBookShipperTeamBookShipmentCreate',
        'team_book_consignee': 'TeamBookConsigneeTeamBookShipmentCreate',
        'broker_information': 'AnyOfBookShipmentTeamBookShipmentCreateBrokerInformation',
        'instructions': 'str',
        'shipment_notes': 'str',
        'emergency_contact': 'str',
        'emergency_phone': 'str',
        'unit_of_measure': 'str',
        'shipment_reference1': 'str',
        'shipment_reference2': 'str',
        'pickup': 'PickupTeamBookShipmentCreate',
        'delivery': 'AnyOfBookShipmentTeamBookShipmentCreateDelivery',
        'team_book_accessorials': 'list[str]',
        'freight': 'list[FreightTeamBookShipmentCreate]'
    }

    attribute_map = {
        'quote_id': 'quoteId',
        'house_bill': 'houseBill',
        'bol_prefix': 'bolPrefix',
        'insurance_addon': 'insuranceAddon',
        'third_party_reference_number': 'thirdPartyReferenceNumber',
        'pro_number': 'proNumber',
        'team_book_shipper': 'teamBookShipper',
        'team_book_consignee': 'teamBookConsignee',
        'broker_information': 'brokerInformation',
        'instructions': 'instructions',
        'shipment_notes': 'shipmentNotes',
        'emergency_contact': 'emergencyContact',
        'emergency_phone': 'emergencyPhone',
        'unit_of_measure': 'unitOfMeasure',
        'shipment_reference1': 'shipmentReference1',
        'shipment_reference2': 'shipmentReference2',
        'pickup': 'pickup',
        'delivery': 'delivery',
        'team_book_accessorials': 'teamBookAccessorials',
        'freight': 'freight'
    }

    def __init__(self, quote_id=None, house_bill=None, bol_prefix=None, insurance_addon=None, third_party_reference_number=None, pro_number=None, team_book_shipper=None, team_book_consignee=None, broker_information=None, instructions=None, shipment_notes=None, emergency_contact=None, emergency_phone=None, unit_of_measure='US', shipment_reference1=None, shipment_reference2=None, pickup=None, delivery=None, team_book_accessorials=None, freight=None):  # noqa: E501
        """BookShipmentTeamBookShipmentCreate - a model defined in Swagger"""  # noqa: E501
        self._quote_id = None
        self._house_bill = None
        self._bol_prefix = None
        self._insurance_addon = None
        self._third_party_reference_number = None
        self._pro_number = None
        self._team_book_shipper = None
        self._team_book_consignee = None
        self._broker_information = None
        self._instructions = None
        self._shipment_notes = None
        self._emergency_contact = None
        self._emergency_phone = None
        self._unit_of_measure = None
        self._shipment_reference1 = None
        self._shipment_reference2 = None
        self._pickup = None
        self._delivery = None
        self._team_book_accessorials = None
        self._freight = None
        self.discriminator = None
        if quote_id is not None:
            self.quote_id = quote_id
        self.house_bill = house_bill
        if bol_prefix is not None:
            self.bol_prefix = bol_prefix
        if insurance_addon is not None:
            self.insurance_addon = insurance_addon
        if third_party_reference_number is not None:
            self.third_party_reference_number = third_party_reference_number
        if pro_number is not None:
            self.pro_number = pro_number
        if team_book_shipper is not None:
            self.team_book_shipper = team_book_shipper
        if team_book_consignee is not None:
            self.team_book_consignee = team_book_consignee
        if broker_information is not None:
            self.broker_information = broker_information
        if instructions is not None:
            self.instructions = instructions
        if shipment_notes is not None:
            self.shipment_notes = shipment_notes
        if emergency_contact is not None:
            self.emergency_contact = emergency_contact
        if emergency_phone is not None:
            self.emergency_phone = emergency_phone
        if unit_of_measure is not None:
            self.unit_of_measure = unit_of_measure
        if shipment_reference1 is not None:
            self.shipment_reference1 = shipment_reference1
        if shipment_reference2 is not None:
            self.shipment_reference2 = shipment_reference2
        self.pickup = pickup
        if delivery is not None:
            self.delivery = delivery
        if team_book_accessorials is not None:
            self.team_book_accessorials = team_book_accessorials
        self.freight = freight

    @property
    def quote_id(self):
        """Gets the quote_id of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The quote_id of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: int
        """
        return self._quote_id

    @quote_id.setter
    def quote_id(self, quote_id):
        """Sets the quote_id of this BookShipmentTeamBookShipmentCreate.


        :param quote_id: The quote_id of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: int
        """

        self._quote_id = quote_id

    @property
    def house_bill(self):
        """Gets the house_bill of this BookShipmentTeamBookShipmentCreate.  # noqa: E501

        Reserve a house bill from either /api/teamww/get-house-bill or get one from /api/team-book/get-quote/{rateId}  # noqa: E501

        :return: The house_bill of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._house_bill

    @house_bill.setter
    def house_bill(self, house_bill):
        """Sets the house_bill of this BookShipmentTeamBookShipmentCreate.

        Reserve a house bill from either /api/teamww/get-house-bill or get one from /api/team-book/get-quote/{rateId}  # noqa: E501

        :param house_bill: The house_bill of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """
        if house_bill is None:
            raise ValueError("Invalid value for `house_bill`, must not be `None`")  # noqa: E501

        self._house_bill = house_bill

    @property
    def bol_prefix(self):
        """Gets the bol_prefix of this BookShipmentTeamBookShipmentCreate.  # noqa: E501

        Leave this null. This is used in special cases.  # noqa: E501

        :return: The bol_prefix of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._bol_prefix

    @bol_prefix.setter
    def bol_prefix(self, bol_prefix):
        """Sets the bol_prefix of this BookShipmentTeamBookShipmentCreate.

        Leave this null. This is used in special cases.  # noqa: E501

        :param bol_prefix: The bol_prefix of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._bol_prefix = bol_prefix

    @property
    def insurance_addon(self):
        """Gets the insurance_addon of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The insurance_addon of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: bool
        """
        return self._insurance_addon

    @insurance_addon.setter
    def insurance_addon(self, insurance_addon):
        """Sets the insurance_addon of this BookShipmentTeamBookShipmentCreate.


        :param insurance_addon: The insurance_addon of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: bool
        """

        self._insurance_addon = insurance_addon

    @property
    def third_party_reference_number(self):
        """Gets the third_party_reference_number of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The third_party_reference_number of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._third_party_reference_number

    @third_party_reference_number.setter
    def third_party_reference_number(self, third_party_reference_number):
        """Sets the third_party_reference_number of this BookShipmentTeamBookShipmentCreate.


        :param third_party_reference_number: The third_party_reference_number of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._third_party_reference_number = third_party_reference_number

    @property
    def pro_number(self):
        """Gets the pro_number of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The pro_number of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._pro_number

    @pro_number.setter
    def pro_number(self, pro_number):
        """Sets the pro_number of this BookShipmentTeamBookShipmentCreate.


        :param pro_number: The pro_number of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._pro_number = pro_number

    @property
    def team_book_shipper(self):
        """Gets the team_book_shipper of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The team_book_shipper of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: TeamBookShipperTeamBookShipmentCreate
        """
        return self._team_book_shipper

    @team_book_shipper.setter
    def team_book_shipper(self, team_book_shipper):
        """Sets the team_book_shipper of this BookShipmentTeamBookShipmentCreate.


        :param team_book_shipper: The team_book_shipper of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: TeamBookShipperTeamBookShipmentCreate
        """

        self._team_book_shipper = team_book_shipper

    @property
    def team_book_consignee(self):
        """Gets the team_book_consignee of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The team_book_consignee of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: TeamBookConsigneeTeamBookShipmentCreate
        """
        return self._team_book_consignee

    @team_book_consignee.setter
    def team_book_consignee(self, team_book_consignee):
        """Sets the team_book_consignee of this BookShipmentTeamBookShipmentCreate.


        :param team_book_consignee: The team_book_consignee of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: TeamBookConsigneeTeamBookShipmentCreate
        """

        self._team_book_consignee = team_book_consignee

    @property
    def broker_information(self):
        """Gets the broker_information of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The broker_information of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: AnyOfBookShipmentTeamBookShipmentCreateBrokerInformation
        """
        return self._broker_information

    @broker_information.setter
    def broker_information(self, broker_information):
        """Sets the broker_information of this BookShipmentTeamBookShipmentCreate.


        :param broker_information: The broker_information of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: AnyOfBookShipmentTeamBookShipmentCreateBrokerInformation
        """

        self._broker_information = broker_information

    @property
    def instructions(self):
        """Gets the instructions of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The instructions of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this BookShipmentTeamBookShipmentCreate.


        :param instructions: The instructions of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._instructions = instructions

    @property
    def shipment_notes(self):
        """Gets the shipment_notes of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The shipment_notes of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._shipment_notes

    @shipment_notes.setter
    def shipment_notes(self, shipment_notes):
        """Sets the shipment_notes of this BookShipmentTeamBookShipmentCreate.


        :param shipment_notes: The shipment_notes of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._shipment_notes = shipment_notes

    @property
    def emergency_contact(self):
        """Gets the emergency_contact of this BookShipmentTeamBookShipmentCreate.  # noqa: E501

        Emergency Contact. Required if a shipment has hazardous materials.  # noqa: E501

        :return: The emergency_contact of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._emergency_contact

    @emergency_contact.setter
    def emergency_contact(self, emergency_contact):
        """Sets the emergency_contact of this BookShipmentTeamBookShipmentCreate.

        Emergency Contact. Required if a shipment has hazardous materials.  # noqa: E501

        :param emergency_contact: The emergency_contact of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._emergency_contact = emergency_contact

    @property
    def emergency_phone(self):
        """Gets the emergency_phone of this BookShipmentTeamBookShipmentCreate.  # noqa: E501

        Emergency Phone Number. Required if a shipment has hazardous materials.  # noqa: E501

        :return: The emergency_phone of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._emergency_phone

    @emergency_phone.setter
    def emergency_phone(self, emergency_phone):
        """Sets the emergency_phone of this BookShipmentTeamBookShipmentCreate.

        Emergency Phone Number. Required if a shipment has hazardous materials.  # noqa: E501

        :param emergency_phone: The emergency_phone of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._emergency_phone = emergency_phone

    @property
    def unit_of_measure(self):
        """Gets the unit_of_measure of this BookShipmentTeamBookShipmentCreate.  # noqa: E501

        Unit of Measure. Valid values: US (lbs/in) - METRIC (kgs/cm) - MIXED (kgs/cms)  # noqa: E501

        :return: The unit_of_measure of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._unit_of_measure

    @unit_of_measure.setter
    def unit_of_measure(self, unit_of_measure):
        """Sets the unit_of_measure of this BookShipmentTeamBookShipmentCreate.

        Unit of Measure. Valid values: US (lbs/in) - METRIC (kgs/cm) - MIXED (kgs/cms)  # noqa: E501

        :param unit_of_measure: The unit_of_measure of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._unit_of_measure = unit_of_measure

    @property
    def shipment_reference1(self):
        """Gets the shipment_reference1 of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The shipment_reference1 of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._shipment_reference1

    @shipment_reference1.setter
    def shipment_reference1(self, shipment_reference1):
        """Sets the shipment_reference1 of this BookShipmentTeamBookShipmentCreate.


        :param shipment_reference1: The shipment_reference1 of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._shipment_reference1 = shipment_reference1

    @property
    def shipment_reference2(self):
        """Gets the shipment_reference2 of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The shipment_reference2 of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: str
        """
        return self._shipment_reference2

    @shipment_reference2.setter
    def shipment_reference2(self, shipment_reference2):
        """Sets the shipment_reference2 of this BookShipmentTeamBookShipmentCreate.


        :param shipment_reference2: The shipment_reference2 of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: str
        """

        self._shipment_reference2 = shipment_reference2

    @property
    def pickup(self):
        """Gets the pickup of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The pickup of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: PickupTeamBookShipmentCreate
        """
        return self._pickup

    @pickup.setter
    def pickup(self, pickup):
        """Sets the pickup of this BookShipmentTeamBookShipmentCreate.


        :param pickup: The pickup of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: PickupTeamBookShipmentCreate
        """
        if pickup is None:
            raise ValueError("Invalid value for `pickup`, must not be `None`")  # noqa: E501

        self._pickup = pickup

    @property
    def delivery(self):
        """Gets the delivery of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The delivery of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: AnyOfBookShipmentTeamBookShipmentCreateDelivery
        """
        return self._delivery

    @delivery.setter
    def delivery(self, delivery):
        """Sets the delivery of this BookShipmentTeamBookShipmentCreate.


        :param delivery: The delivery of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: AnyOfBookShipmentTeamBookShipmentCreateDelivery
        """

        self._delivery = delivery

    @property
    def team_book_accessorials(self):
        """Gets the team_book_accessorials of this BookShipmentTeamBookShipmentCreate.  # noqa: E501

        Array of accessorial codes. Refer to enabledAccessorials returned in /api/team-book/get-accessorials. Provide the code.  # noqa: E501

        :return: The team_book_accessorials of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: list[str]
        """
        return self._team_book_accessorials

    @team_book_accessorials.setter
    def team_book_accessorials(self, team_book_accessorials):
        """Sets the team_book_accessorials of this BookShipmentTeamBookShipmentCreate.

        Array of accessorial codes. Refer to enabledAccessorials returned in /api/team-book/get-accessorials. Provide the code.  # noqa: E501

        :param team_book_accessorials: The team_book_accessorials of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: list[str]
        """

        self._team_book_accessorials = team_book_accessorials

    @property
    def freight(self):
        """Gets the freight of this BookShipmentTeamBookShipmentCreate.  # noqa: E501


        :return: The freight of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :rtype: list[FreightTeamBookShipmentCreate]
        """
        return self._freight

    @freight.setter
    def freight(self, freight):
        """Sets the freight of this BookShipmentTeamBookShipmentCreate.


        :param freight: The freight of this BookShipmentTeamBookShipmentCreate.  # noqa: E501
        :type: list[FreightTeamBookShipmentCreate]
        """
        if freight is None:
            raise ValueError("Invalid value for `freight`, must not be `None`")  # noqa: E501

        self._freight = freight

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BookShipmentTeamBookShipmentCreate, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BookShipmentTeamBookShipmentCreate):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
