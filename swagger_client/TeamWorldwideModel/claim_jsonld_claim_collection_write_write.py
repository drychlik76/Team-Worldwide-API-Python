# coding: utf-8

"""
    Team Worldwide API 2022

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ClaimJsonldClaimCollectionWriteWrite(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'context': 'OneOfClaimJsonldClaimCollectionWriteWriteContext',
        'id': 'str',
        'type': 'str',
        'id': 'str',
        'is_active': 'bool',
        'hawb': 'str',
        'carrier_air_bill_number': 'str',
        'broker_number': 'str',
        'status_of_master': 'str',
        'final_status_of_claim': 'str',
        'customer_number': 'str',
        'origin': 'str',
        'destination': 'str',
        'pieces': 'int',
        'weight': 'float',
        'pieces_damaged': 'int',
        'weight_damaged': 'float',
        'carrier': 'str',
        'carrier_number': 'str',
        'company': 'str',
        'sub_amount': 'float',
        'sub_paid_amount': 'float',
        'claims_amount': 'float',
        'claim_paid_amount': 'float',
        'claim_check_number': 'str',
        'claim_check_date': 'datetime',
        'subrogate_against': 'str',
        'subrogate_amount': 'float',
        'subrogate_paid_amount': 'float',
        'subrogate_check_number': 'str',
        'subrogate_check_date': 'datetime',
        'declared_value_recap': 'float',
        'declared_value_amount_on_claim': 'float',
        'information': 'str',
        'date_claim_called_in_by_consignee': 'datetime',
        'entry_date': 'datetime',
        'freight_paid_date': 'datetime',
        'receive_date': 'datetime',
        'recap_date': 'datetime',
        'ship_date': 'datetime',
        'transaction_date': 'datetime',
        'code': 'str',
        'decision': 'str',
        'sub_code': 'str',
        'operator': 'str',
        'product': 'str',
        'content': 'str',
        'claimant_name': 'str',
        'insurance_company': 'str',
        'way_bill_number': 'str',
        'sub_check_number': 'str',
        'type': 'str',
        'loss_damaged': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'email': 'str',
        'phone': 'str',
        'address': 'str',
        'address2': 'str',
        'city': 'str',
        'state': 'str',
        'zip_code': 'str',
        'form': 'str',
        'sent': 'bool',
        'comment': 'str',
        'report_date': 'datetime',
        'check_date': 'datetime',
        'sub_date_paid': 'datetime'
    }

    attribute_map = {
        'context': '@context',
        'id': '@id',
        'type': '@type',
        'id': 'id',
        'is_active': 'isActive',
        'hawb': 'hawb',
        'carrier_air_bill_number': 'carrierAirBillNumber',
        'broker_number': 'brokerNumber',
        'status_of_master': 'statusOfMaster',
        'final_status_of_claim': 'finalStatusOfClaim',
        'customer_number': 'customerNumber',
        'origin': 'origin',
        'destination': 'destination',
        'pieces': 'pieces',
        'weight': 'weight',
        'pieces_damaged': 'piecesDamaged',
        'weight_damaged': 'weightDamaged',
        'carrier': 'carrier',
        'carrier_number': 'carrierNumber',
        'company': 'company',
        'sub_amount': 'subAmount',
        'sub_paid_amount': 'subPaidAmount',
        'claims_amount': 'claimsAmount',
        'claim_paid_amount': 'claimPaidAmount',
        'claim_check_number': 'claimCheckNumber',
        'claim_check_date': 'claimCheckDate',
        'subrogate_against': 'subrogateAgainst',
        'subrogate_amount': 'subrogateAmount',
        'subrogate_paid_amount': 'subrogatePaidAmount',
        'subrogate_check_number': 'subrogateCheckNumber',
        'subrogate_check_date': 'subrogateCheckDate',
        'declared_value_recap': 'declaredValueRecap',
        'declared_value_amount_on_claim': 'declaredValueAmountOnClaim',
        'information': 'information',
        'date_claim_called_in_by_consignee': 'dateClaimCalledInByConsignee',
        'entry_date': 'entryDate',
        'freight_paid_date': 'freightPaidDate',
        'receive_date': 'receiveDate',
        'recap_date': 'recapDate',
        'ship_date': 'shipDate',
        'transaction_date': 'transactionDate',
        'code': 'code',
        'decision': 'decision',
        'sub_code': 'subCode',
        'operator': 'operator',
        'product': 'product',
        'content': 'content',
        'claimant_name': 'claimantName',
        'insurance_company': 'insuranceCompany',
        'way_bill_number': 'wayBillNumber',
        'sub_check_number': 'subCheckNumber',
        'type': 'type',
        'loss_damaged': 'lossDamaged',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'email': 'email',
        'phone': 'phone',
        'address': 'address',
        'address2': 'address2',
        'city': 'city',
        'state': 'state',
        'zip_code': 'zipCode',
        'form': 'form',
        'sent': 'sent',
        'comment': 'comment',
        'report_date': 'reportDate',
        'check_date': 'checkDate',
        'sub_date_paid': 'subDatePaid'
    }

    def __init__(self, context=None, id=None, type=None, id=None, is_active=None, hawb=None, carrier_air_bill_number=None, broker_number=None, status_of_master=None, final_status_of_claim=None, customer_number=None, origin=None, destination=None, pieces=None, weight=None, pieces_damaged=None, weight_damaged=None, carrier=None, carrier_number=None, company=None, sub_amount=None, sub_paid_amount=None, claims_amount=None, claim_paid_amount=None, claim_check_number=None, claim_check_date=None, subrogate_against=None, subrogate_amount=None, subrogate_paid_amount=None, subrogate_check_number=None, subrogate_check_date=None, declared_value_recap=None, declared_value_amount_on_claim=None, information=None, date_claim_called_in_by_consignee=None, entry_date=None, freight_paid_date=None, receive_date=None, recap_date=None, ship_date=None, transaction_date=None, code=None, decision=None, sub_code=None, operator=None, product=None, content=None, claimant_name=None, insurance_company=None, way_bill_number=None, sub_check_number=None, type=None, loss_damaged=None, first_name=None, last_name=None, email=None, phone=None, address=None, address2=None, city=None, state=None, zip_code=None, form=None, sent=None, comment=None, report_date=None, check_date=None, sub_date_paid=None):  # noqa: E501
        """ClaimJsonldClaimCollectionWriteWrite - a model defined in Swagger"""  # noqa: E501
        self._context = None
        self._id = None
        self._type = None
        self._id = None
        self._is_active = None
        self._hawb = None
        self._carrier_air_bill_number = None
        self._broker_number = None
        self._status_of_master = None
        self._final_status_of_claim = None
        self._customer_number = None
        self._origin = None
        self._destination = None
        self._pieces = None
        self._weight = None
        self._pieces_damaged = None
        self._weight_damaged = None
        self._carrier = None
        self._carrier_number = None
        self._company = None
        self._sub_amount = None
        self._sub_paid_amount = None
        self._claims_amount = None
        self._claim_paid_amount = None
        self._claim_check_number = None
        self._claim_check_date = None
        self._subrogate_against = None
        self._subrogate_amount = None
        self._subrogate_paid_amount = None
        self._subrogate_check_number = None
        self._subrogate_check_date = None
        self._declared_value_recap = None
        self._declared_value_amount_on_claim = None
        self._information = None
        self._date_claim_called_in_by_consignee = None
        self._entry_date = None
        self._freight_paid_date = None
        self._receive_date = None
        self._recap_date = None
        self._ship_date = None
        self._transaction_date = None
        self._code = None
        self._decision = None
        self._sub_code = None
        self._operator = None
        self._product = None
        self._content = None
        self._claimant_name = None
        self._insurance_company = None
        self._way_bill_number = None
        self._sub_check_number = None
        self._type = None
        self._loss_damaged = None
        self._first_name = None
        self._last_name = None
        self._email = None
        self._phone = None
        self._address = None
        self._address2 = None
        self._city = None
        self._state = None
        self._zip_code = None
        self._form = None
        self._sent = None
        self._comment = None
        self._report_date = None
        self._check_date = None
        self._sub_date_paid = None
        self.discriminator = None
        if context is not None:
            self.context = context
        if id is not None:
            self.id = id
        if type is not None:
            self.type = type
        if id is not None:
            self.id = id
        if is_active is not None:
            self.is_active = is_active
        if hawb is not None:
            self.hawb = hawb
        if carrier_air_bill_number is not None:
            self.carrier_air_bill_number = carrier_air_bill_number
        if broker_number is not None:
            self.broker_number = broker_number
        if status_of_master is not None:
            self.status_of_master = status_of_master
        if final_status_of_claim is not None:
            self.final_status_of_claim = final_status_of_claim
        if customer_number is not None:
            self.customer_number = customer_number
        if origin is not None:
            self.origin = origin
        if destination is not None:
            self.destination = destination
        if pieces is not None:
            self.pieces = pieces
        if weight is not None:
            self.weight = weight
        if pieces_damaged is not None:
            self.pieces_damaged = pieces_damaged
        if weight_damaged is not None:
            self.weight_damaged = weight_damaged
        if carrier is not None:
            self.carrier = carrier
        if carrier_number is not None:
            self.carrier_number = carrier_number
        if company is not None:
            self.company = company
        if sub_amount is not None:
            self.sub_amount = sub_amount
        if sub_paid_amount is not None:
            self.sub_paid_amount = sub_paid_amount
        if claims_amount is not None:
            self.claims_amount = claims_amount
        if claim_paid_amount is not None:
            self.claim_paid_amount = claim_paid_amount
        if claim_check_number is not None:
            self.claim_check_number = claim_check_number
        if claim_check_date is not None:
            self.claim_check_date = claim_check_date
        if subrogate_against is not None:
            self.subrogate_against = subrogate_against
        if subrogate_amount is not None:
            self.subrogate_amount = subrogate_amount
        if subrogate_paid_amount is not None:
            self.subrogate_paid_amount = subrogate_paid_amount
        if subrogate_check_number is not None:
            self.subrogate_check_number = subrogate_check_number
        if subrogate_check_date is not None:
            self.subrogate_check_date = subrogate_check_date
        if declared_value_recap is not None:
            self.declared_value_recap = declared_value_recap
        if declared_value_amount_on_claim is not None:
            self.declared_value_amount_on_claim = declared_value_amount_on_claim
        if information is not None:
            self.information = information
        if date_claim_called_in_by_consignee is not None:
            self.date_claim_called_in_by_consignee = date_claim_called_in_by_consignee
        if entry_date is not None:
            self.entry_date = entry_date
        if freight_paid_date is not None:
            self.freight_paid_date = freight_paid_date
        if receive_date is not None:
            self.receive_date = receive_date
        if recap_date is not None:
            self.recap_date = recap_date
        if ship_date is not None:
            self.ship_date = ship_date
        if transaction_date is not None:
            self.transaction_date = transaction_date
        if code is not None:
            self.code = code
        if decision is not None:
            self.decision = decision
        if sub_code is not None:
            self.sub_code = sub_code
        if operator is not None:
            self.operator = operator
        if product is not None:
            self.product = product
        if content is not None:
            self.content = content
        if claimant_name is not None:
            self.claimant_name = claimant_name
        if insurance_company is not None:
            self.insurance_company = insurance_company
        if way_bill_number is not None:
            self.way_bill_number = way_bill_number
        if sub_check_number is not None:
            self.sub_check_number = sub_check_number
        if type is not None:
            self.type = type
        if loss_damaged is not None:
            self.loss_damaged = loss_damaged
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if email is not None:
            self.email = email
        if phone is not None:
            self.phone = phone
        if address is not None:
            self.address = address
        if address2 is not None:
            self.address2 = address2
        if city is not None:
            self.city = city
        if state is not None:
            self.state = state
        if zip_code is not None:
            self.zip_code = zip_code
        if form is not None:
            self.form = form
        if sent is not None:
            self.sent = sent
        if comment is not None:
            self.comment = comment
        if report_date is not None:
            self.report_date = report_date
        if check_date is not None:
            self.check_date = check_date
        if sub_date_paid is not None:
            self.sub_date_paid = sub_date_paid

    @property
    def context(self):
        """Gets the context of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The context of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: OneOfClaimJsonldClaimCollectionWriteWriteContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this ClaimJsonldClaimCollectionWriteWrite.


        :param context: The context of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: OneOfClaimJsonldClaimCollectionWriteWriteContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The id of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClaimJsonldClaimCollectionWriteWrite.


        :param id: The id of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The type of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ClaimJsonldClaimCollectionWriteWrite.


        :param type: The type of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def id(self):
        """Gets the id of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The id of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClaimJsonldClaimCollectionWriteWrite.


        :param id: The id of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The is_active of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ClaimJsonldClaimCollectionWriteWrite.


        :param is_active: The is_active of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: bool
        """

        self._is_active = is_active

    @property
    def hawb(self):
        """Gets the hawb of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The hawb of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._hawb

    @hawb.setter
    def hawb(self, hawb):
        """Sets the hawb of this ClaimJsonldClaimCollectionWriteWrite.


        :param hawb: The hawb of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._hawb = hawb

    @property
    def carrier_air_bill_number(self):
        """Gets the carrier_air_bill_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The carrier_air_bill_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._carrier_air_bill_number

    @carrier_air_bill_number.setter
    def carrier_air_bill_number(self, carrier_air_bill_number):
        """Sets the carrier_air_bill_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param carrier_air_bill_number: The carrier_air_bill_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._carrier_air_bill_number = carrier_air_bill_number

    @property
    def broker_number(self):
        """Gets the broker_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The broker_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._broker_number

    @broker_number.setter
    def broker_number(self, broker_number):
        """Sets the broker_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param broker_number: The broker_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._broker_number = broker_number

    @property
    def status_of_master(self):
        """Gets the status_of_master of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The status_of_master of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._status_of_master

    @status_of_master.setter
    def status_of_master(self, status_of_master):
        """Sets the status_of_master of this ClaimJsonldClaimCollectionWriteWrite.


        :param status_of_master: The status_of_master of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._status_of_master = status_of_master

    @property
    def final_status_of_claim(self):
        """Gets the final_status_of_claim of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The final_status_of_claim of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._final_status_of_claim

    @final_status_of_claim.setter
    def final_status_of_claim(self, final_status_of_claim):
        """Sets the final_status_of_claim of this ClaimJsonldClaimCollectionWriteWrite.


        :param final_status_of_claim: The final_status_of_claim of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._final_status_of_claim = final_status_of_claim

    @property
    def customer_number(self):
        """Gets the customer_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The customer_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._customer_number

    @customer_number.setter
    def customer_number(self, customer_number):
        """Sets the customer_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param customer_number: The customer_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._customer_number = customer_number

    @property
    def origin(self):
        """Gets the origin of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The origin of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this ClaimJsonldClaimCollectionWriteWrite.


        :param origin: The origin of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._origin = origin

    @property
    def destination(self):
        """Gets the destination of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The destination of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this ClaimJsonldClaimCollectionWriteWrite.


        :param destination: The destination of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._destination = destination

    @property
    def pieces(self):
        """Gets the pieces of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The pieces of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: int
        """
        return self._pieces

    @pieces.setter
    def pieces(self, pieces):
        """Sets the pieces of this ClaimJsonldClaimCollectionWriteWrite.


        :param pieces: The pieces of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: int
        """

        self._pieces = pieces

    @property
    def weight(self):
        """Gets the weight of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The weight of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this ClaimJsonldClaimCollectionWriteWrite.


        :param weight: The weight of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._weight = weight

    @property
    def pieces_damaged(self):
        """Gets the pieces_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The pieces_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: int
        """
        return self._pieces_damaged

    @pieces_damaged.setter
    def pieces_damaged(self, pieces_damaged):
        """Sets the pieces_damaged of this ClaimJsonldClaimCollectionWriteWrite.


        :param pieces_damaged: The pieces_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: int
        """

        self._pieces_damaged = pieces_damaged

    @property
    def weight_damaged(self):
        """Gets the weight_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The weight_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._weight_damaged

    @weight_damaged.setter
    def weight_damaged(self, weight_damaged):
        """Sets the weight_damaged of this ClaimJsonldClaimCollectionWriteWrite.


        :param weight_damaged: The weight_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._weight_damaged = weight_damaged

    @property
    def carrier(self):
        """Gets the carrier of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The carrier of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this ClaimJsonldClaimCollectionWriteWrite.


        :param carrier: The carrier of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._carrier = carrier

    @property
    def carrier_number(self):
        """Gets the carrier_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The carrier_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._carrier_number

    @carrier_number.setter
    def carrier_number(self, carrier_number):
        """Sets the carrier_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param carrier_number: The carrier_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._carrier_number = carrier_number

    @property
    def company(self):
        """Gets the company of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The company of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this ClaimJsonldClaimCollectionWriteWrite.


        :param company: The company of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._company = company

    @property
    def sub_amount(self):
        """Gets the sub_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The sub_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._sub_amount

    @sub_amount.setter
    def sub_amount(self, sub_amount):
        """Sets the sub_amount of this ClaimJsonldClaimCollectionWriteWrite.


        :param sub_amount: The sub_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._sub_amount = sub_amount

    @property
    def sub_paid_amount(self):
        """Gets the sub_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The sub_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._sub_paid_amount

    @sub_paid_amount.setter
    def sub_paid_amount(self, sub_paid_amount):
        """Sets the sub_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.


        :param sub_paid_amount: The sub_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._sub_paid_amount = sub_paid_amount

    @property
    def claims_amount(self):
        """Gets the claims_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The claims_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._claims_amount

    @claims_amount.setter
    def claims_amount(self, claims_amount):
        """Sets the claims_amount of this ClaimJsonldClaimCollectionWriteWrite.


        :param claims_amount: The claims_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._claims_amount = claims_amount

    @property
    def claim_paid_amount(self):
        """Gets the claim_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The claim_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._claim_paid_amount

    @claim_paid_amount.setter
    def claim_paid_amount(self, claim_paid_amount):
        """Sets the claim_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.


        :param claim_paid_amount: The claim_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._claim_paid_amount = claim_paid_amount

    @property
    def claim_check_number(self):
        """Gets the claim_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The claim_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._claim_check_number

    @claim_check_number.setter
    def claim_check_number(self, claim_check_number):
        """Sets the claim_check_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param claim_check_number: The claim_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._claim_check_number = claim_check_number

    @property
    def claim_check_date(self):
        """Gets the claim_check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The claim_check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._claim_check_date

    @claim_check_date.setter
    def claim_check_date(self, claim_check_date):
        """Sets the claim_check_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param claim_check_date: The claim_check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._claim_check_date = claim_check_date

    @property
    def subrogate_against(self):
        """Gets the subrogate_against of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The subrogate_against of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._subrogate_against

    @subrogate_against.setter
    def subrogate_against(self, subrogate_against):
        """Sets the subrogate_against of this ClaimJsonldClaimCollectionWriteWrite.


        :param subrogate_against: The subrogate_against of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._subrogate_against = subrogate_against

    @property
    def subrogate_amount(self):
        """Gets the subrogate_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The subrogate_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._subrogate_amount

    @subrogate_amount.setter
    def subrogate_amount(self, subrogate_amount):
        """Sets the subrogate_amount of this ClaimJsonldClaimCollectionWriteWrite.


        :param subrogate_amount: The subrogate_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._subrogate_amount = subrogate_amount

    @property
    def subrogate_paid_amount(self):
        """Gets the subrogate_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The subrogate_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._subrogate_paid_amount

    @subrogate_paid_amount.setter
    def subrogate_paid_amount(self, subrogate_paid_amount):
        """Sets the subrogate_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.


        :param subrogate_paid_amount: The subrogate_paid_amount of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._subrogate_paid_amount = subrogate_paid_amount

    @property
    def subrogate_check_number(self):
        """Gets the subrogate_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The subrogate_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._subrogate_check_number

    @subrogate_check_number.setter
    def subrogate_check_number(self, subrogate_check_number):
        """Sets the subrogate_check_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param subrogate_check_number: The subrogate_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._subrogate_check_number = subrogate_check_number

    @property
    def subrogate_check_date(self):
        """Gets the subrogate_check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The subrogate_check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._subrogate_check_date

    @subrogate_check_date.setter
    def subrogate_check_date(self, subrogate_check_date):
        """Sets the subrogate_check_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param subrogate_check_date: The subrogate_check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._subrogate_check_date = subrogate_check_date

    @property
    def declared_value_recap(self):
        """Gets the declared_value_recap of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The declared_value_recap of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._declared_value_recap

    @declared_value_recap.setter
    def declared_value_recap(self, declared_value_recap):
        """Sets the declared_value_recap of this ClaimJsonldClaimCollectionWriteWrite.


        :param declared_value_recap: The declared_value_recap of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._declared_value_recap = declared_value_recap

    @property
    def declared_value_amount_on_claim(self):
        """Gets the declared_value_amount_on_claim of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The declared_value_amount_on_claim of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: float
        """
        return self._declared_value_amount_on_claim

    @declared_value_amount_on_claim.setter
    def declared_value_amount_on_claim(self, declared_value_amount_on_claim):
        """Sets the declared_value_amount_on_claim of this ClaimJsonldClaimCollectionWriteWrite.


        :param declared_value_amount_on_claim: The declared_value_amount_on_claim of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: float
        """

        self._declared_value_amount_on_claim = declared_value_amount_on_claim

    @property
    def information(self):
        """Gets the information of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The information of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._information

    @information.setter
    def information(self, information):
        """Sets the information of this ClaimJsonldClaimCollectionWriteWrite.


        :param information: The information of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._information = information

    @property
    def date_claim_called_in_by_consignee(self):
        """Gets the date_claim_called_in_by_consignee of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The date_claim_called_in_by_consignee of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._date_claim_called_in_by_consignee

    @date_claim_called_in_by_consignee.setter
    def date_claim_called_in_by_consignee(self, date_claim_called_in_by_consignee):
        """Sets the date_claim_called_in_by_consignee of this ClaimJsonldClaimCollectionWriteWrite.


        :param date_claim_called_in_by_consignee: The date_claim_called_in_by_consignee of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._date_claim_called_in_by_consignee = date_claim_called_in_by_consignee

    @property
    def entry_date(self):
        """Gets the entry_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The entry_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._entry_date

    @entry_date.setter
    def entry_date(self, entry_date):
        """Sets the entry_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param entry_date: The entry_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._entry_date = entry_date

    @property
    def freight_paid_date(self):
        """Gets the freight_paid_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The freight_paid_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._freight_paid_date

    @freight_paid_date.setter
    def freight_paid_date(self, freight_paid_date):
        """Sets the freight_paid_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param freight_paid_date: The freight_paid_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._freight_paid_date = freight_paid_date

    @property
    def receive_date(self):
        """Gets the receive_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The receive_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._receive_date

    @receive_date.setter
    def receive_date(self, receive_date):
        """Sets the receive_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param receive_date: The receive_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._receive_date = receive_date

    @property
    def recap_date(self):
        """Gets the recap_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The recap_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._recap_date

    @recap_date.setter
    def recap_date(self, recap_date):
        """Sets the recap_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param recap_date: The recap_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._recap_date = recap_date

    @property
    def ship_date(self):
        """Gets the ship_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The ship_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._ship_date

    @ship_date.setter
    def ship_date(self, ship_date):
        """Sets the ship_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param ship_date: The ship_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._ship_date = ship_date

    @property
    def transaction_date(self):
        """Gets the transaction_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The transaction_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._transaction_date

    @transaction_date.setter
    def transaction_date(self, transaction_date):
        """Sets the transaction_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param transaction_date: The transaction_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._transaction_date = transaction_date

    @property
    def code(self):
        """Gets the code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ClaimJsonldClaimCollectionWriteWrite.


        :param code: The code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def decision(self):
        """Gets the decision of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The decision of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._decision

    @decision.setter
    def decision(self, decision):
        """Sets the decision of this ClaimJsonldClaimCollectionWriteWrite.


        :param decision: The decision of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._decision = decision

    @property
    def sub_code(self):
        """Gets the sub_code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The sub_code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._sub_code

    @sub_code.setter
    def sub_code(self, sub_code):
        """Sets the sub_code of this ClaimJsonldClaimCollectionWriteWrite.


        :param sub_code: The sub_code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._sub_code = sub_code

    @property
    def operator(self):
        """Gets the operator of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The operator of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this ClaimJsonldClaimCollectionWriteWrite.


        :param operator: The operator of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._operator = operator

    @property
    def product(self):
        """Gets the product of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The product of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this ClaimJsonldClaimCollectionWriteWrite.


        :param product: The product of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._product = product

    @property
    def content(self):
        """Gets the content of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The content of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ClaimJsonldClaimCollectionWriteWrite.


        :param content: The content of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._content = content

    @property
    def claimant_name(self):
        """Gets the claimant_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The claimant_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._claimant_name

    @claimant_name.setter
    def claimant_name(self, claimant_name):
        """Sets the claimant_name of this ClaimJsonldClaimCollectionWriteWrite.


        :param claimant_name: The claimant_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._claimant_name = claimant_name

    @property
    def insurance_company(self):
        """Gets the insurance_company of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The insurance_company of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._insurance_company

    @insurance_company.setter
    def insurance_company(self, insurance_company):
        """Sets the insurance_company of this ClaimJsonldClaimCollectionWriteWrite.


        :param insurance_company: The insurance_company of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._insurance_company = insurance_company

    @property
    def way_bill_number(self):
        """Gets the way_bill_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The way_bill_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._way_bill_number

    @way_bill_number.setter
    def way_bill_number(self, way_bill_number):
        """Sets the way_bill_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param way_bill_number: The way_bill_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._way_bill_number = way_bill_number

    @property
    def sub_check_number(self):
        """Gets the sub_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The sub_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._sub_check_number

    @sub_check_number.setter
    def sub_check_number(self, sub_check_number):
        """Sets the sub_check_number of this ClaimJsonldClaimCollectionWriteWrite.


        :param sub_check_number: The sub_check_number of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._sub_check_number = sub_check_number

    @property
    def type(self):
        """Gets the type of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The type of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ClaimJsonldClaimCollectionWriteWrite.


        :param type: The type of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def loss_damaged(self):
        """Gets the loss_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The loss_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._loss_damaged

    @loss_damaged.setter
    def loss_damaged(self, loss_damaged):
        """Sets the loss_damaged of this ClaimJsonldClaimCollectionWriteWrite.


        :param loss_damaged: The loss_damaged of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._loss_damaged = loss_damaged

    @property
    def first_name(self):
        """Gets the first_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The first_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ClaimJsonldClaimCollectionWriteWrite.


        :param first_name: The first_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The last_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ClaimJsonldClaimCollectionWriteWrite.


        :param last_name: The last_name of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def email(self):
        """Gets the email of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The email of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ClaimJsonldClaimCollectionWriteWrite.


        :param email: The email of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def phone(self):
        """Gets the phone of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The phone of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this ClaimJsonldClaimCollectionWriteWrite.


        :param phone: The phone of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def address(self):
        """Gets the address of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The address of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ClaimJsonldClaimCollectionWriteWrite.


        :param address: The address of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def address2(self):
        """Gets the address2 of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The address2 of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this ClaimJsonldClaimCollectionWriteWrite.


        :param address2: The address2 of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._address2 = address2

    @property
    def city(self):
        """Gets the city of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The city of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this ClaimJsonldClaimCollectionWriteWrite.


        :param city: The city of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def state(self):
        """Gets the state of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The state of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ClaimJsonldClaimCollectionWriteWrite.


        :param state: The state of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def zip_code(self):
        """Gets the zip_code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The zip_code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this ClaimJsonldClaimCollectionWriteWrite.


        :param zip_code: The zip_code of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._zip_code = zip_code

    @property
    def form(self):
        """Gets the form of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The form of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._form

    @form.setter
    def form(self, form):
        """Sets the form of this ClaimJsonldClaimCollectionWriteWrite.


        :param form: The form of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._form = form

    @property
    def sent(self):
        """Gets the sent of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The sent of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: bool
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this ClaimJsonldClaimCollectionWriteWrite.


        :param sent: The sent of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: bool
        """

        self._sent = sent

    @property
    def comment(self):
        """Gets the comment of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The comment of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this ClaimJsonldClaimCollectionWriteWrite.


        :param comment: The comment of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: str
        """

        self._comment = comment

    @property
    def report_date(self):
        """Gets the report_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The report_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._report_date

    @report_date.setter
    def report_date(self, report_date):
        """Sets the report_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param report_date: The report_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._report_date = report_date

    @property
    def check_date(self):
        """Gets the check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._check_date

    @check_date.setter
    def check_date(self, check_date):
        """Sets the check_date of this ClaimJsonldClaimCollectionWriteWrite.


        :param check_date: The check_date of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._check_date = check_date

    @property
    def sub_date_paid(self):
        """Gets the sub_date_paid of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501


        :return: The sub_date_paid of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :rtype: datetime
        """
        return self._sub_date_paid

    @sub_date_paid.setter
    def sub_date_paid(self, sub_date_paid):
        """Sets the sub_date_paid of this ClaimJsonldClaimCollectionWriteWrite.


        :param sub_date_paid: The sub_date_paid of this ClaimJsonldClaimCollectionWriteWrite.  # noqa: E501
        :type: datetime
        """

        self._sub_date_paid = sub_date_paid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ClaimJsonldClaimCollectionWriteWrite, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClaimJsonldClaimCollectionWriteWrite):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
