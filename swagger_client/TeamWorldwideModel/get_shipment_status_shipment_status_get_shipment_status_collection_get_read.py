# coding: utf-8

"""
    Team Worldwide API 2022

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'unique_id': 'str',
        'house_bill': 'str',
        'status_code': 'str',
        'status_message': 'str',
        'status_date': 'str',
        'status_time': 'str',
        'control_airport': 'str',
        'origin': 'str',
        'destination': 'str',
        'comment': 'str',
        'gmt_offset': 'int'
    }

    attribute_map = {
        'unique_id': 'uniqueId',
        'house_bill': 'houseBill',
        'status_code': 'statusCode',
        'status_message': 'statusMessage',
        'status_date': 'statusDate',
        'status_time': 'statusTime',
        'control_airport': 'controlAirport',
        'origin': 'origin',
        'destination': 'destination',
        'comment': 'comment',
        'gmt_offset': 'gmtOffset'
    }

    def __init__(self, unique_id=None, house_bill=None, status_code=None, status_message=None, status_date=None, status_time=None, control_airport=None, origin=None, destination=None, comment=None, gmt_offset=None):  # noqa: E501
        """GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead - a model defined in Swagger"""  # noqa: E501
        self._unique_id = None
        self._house_bill = None
        self._status_code = None
        self._status_message = None
        self._status_date = None
        self._status_time = None
        self._control_airport = None
        self._origin = None
        self._destination = None
        self._comment = None
        self._gmt_offset = None
        self.discriminator = None
        if unique_id is not None:
            self.unique_id = unique_id
        if house_bill is not None:
            self.house_bill = house_bill
        if status_code is not None:
            self.status_code = status_code
        if status_message is not None:
            self.status_message = status_message
        if status_date is not None:
            self.status_date = status_date
        if status_time is not None:
            self.status_time = status_time
        if control_airport is not None:
            self.control_airport = control_airport
        if origin is not None:
            self.origin = origin
        if destination is not None:
            self.destination = destination
        if comment is not None:
            self.comment = comment
        if gmt_offset is not None:
            self.gmt_offset = gmt_offset

    @property
    def unique_id(self):
        """Gets the unique_id of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The unique_id of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._unique_id

    @unique_id.setter
    def unique_id(self, unique_id):
        """Sets the unique_id of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param unique_id: The unique_id of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._unique_id = unique_id

    @property
    def house_bill(self):
        """Gets the house_bill of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The house_bill of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._house_bill

    @house_bill.setter
    def house_bill(self, house_bill):
        """Sets the house_bill of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param house_bill: The house_bill of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._house_bill = house_bill

    @property
    def status_code(self):
        """Gets the status_code of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The status_code of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param status_code: The status_code of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._status_code = status_code

    @property
    def status_message(self):
        """Gets the status_message of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The status_message of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param status_message: The status_message of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._status_message = status_message

    @property
    def status_date(self):
        """Gets the status_date of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The status_date of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._status_date

    @status_date.setter
    def status_date(self, status_date):
        """Sets the status_date of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param status_date: The status_date of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._status_date = status_date

    @property
    def status_time(self):
        """Gets the status_time of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The status_time of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._status_time

    @status_time.setter
    def status_time(self, status_time):
        """Sets the status_time of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param status_time: The status_time of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._status_time = status_time

    @property
    def control_airport(self):
        """Gets the control_airport of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The control_airport of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._control_airport

    @control_airport.setter
    def control_airport(self, control_airport):
        """Sets the control_airport of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param control_airport: The control_airport of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._control_airport = control_airport

    @property
    def origin(self):
        """Gets the origin of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The origin of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param origin: The origin of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._origin = origin

    @property
    def destination(self):
        """Gets the destination of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The destination of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param destination: The destination of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._destination = destination

    @property
    def comment(self):
        """Gets the comment of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The comment of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param comment: The comment of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: str
        """

        self._comment = comment

    @property
    def gmt_offset(self):
        """Gets the gmt_offset of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501


        :return: The gmt_offset of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :rtype: int
        """
        return self._gmt_offset

    @gmt_offset.setter
    def gmt_offset(self, gmt_offset):
        """Sets the gmt_offset of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.


        :param gmt_offset: The gmt_offset of this GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead.  # noqa: E501
        :type: int
        """

        self._gmt_offset = gmt_offset

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetShipmentStatusShipmentStatusGetShipmentStatusCollectionGetRead):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
